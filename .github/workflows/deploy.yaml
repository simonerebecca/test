on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Change to deployment directory
        run: cd deployment

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies in deployment directory
        run: npm install
        working-directory: ./deployment

      - name: Install missing Pulumi dependencies 
        run: npm install @pulumi/pulumiservice --cwd=deployment
        continue-on-error: true  

      - name: Install Pulumi dependencies
        run: pulumi plugin install resource aws --cwd=deployment

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
          
      - name: Force AWS Credentials (Disable Profile)
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_REGION=eu-central-1" >> $GITHUB_ENV
          echo "AWS_PROFILE=" >> $GITHUB_ENV 

      - name: Install Pulumi CLI
        uses: pulumi/actions@v4
        with:
          pulumi-version: latest
          work-dir: ./deployment

      - name: Set Pulumi Access Token
        run: echo "PULUMI_ACCESS_TOKEN=${{ secrets.PULUMI_ACCESS_TOKEN }}" >> $GITHUB_ENV

      - name: Verify Pulumi Login
        run: pulumi whoami
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      - name: Select Pulumi Stack
        run: pulumi stack select dev --cwd=deployment
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      - name: Run Pulumi
        uses: pulumi/actions@v4
        with:
          command: up
          stack-name: dev
          work-dir: ./deployment 
